namespace Mercatec.WinUIEx.Messaging
{
    /// <summary>
    ///     Represents a Windows Message.
    /// </summary>
    /// <remarks>
    ///     Refer to Windows MSG structure documentation for more info:
    ///     <a href="https://docs.microsoft.com/en-us/windows/win32/api/winuser/ns-winuser-msg" />.
    /// </remarks>
    [default_interface]
    runtimeclass Message : Windows.Foundation.IStringable
    {
        Message();
        Message(UInt64 Hwnd, UInt32 MessageId, UInt64 WParam, Int64 LParam);

        /// <summary>
        ///     Gets the window handle of the message.
        /// </summary>
        /// <remarks>Window handle is a value that uniquely identifies a window on the system. This property returns a handle of the window whose window procedure receives this message. It is useful when your code need to interact with some native Windows API functions that expect window handles as parameters.</remarks>
        UInt64 Hwnd { get; set; };

        /// <summary>
        ///     Gets the ID number for the message.
        /// </summary>
        UInt32 MessageId { get; set; };

        /// <summary>
        ///     Gets or sets the WParam field of the message.
        /// </summary>
        UInt64 WParam { get; set; };

        /// <summary>
        ///     Specifies the LParam field of the message.
        /// </summary>
        Int64 LParam { get; set; };

        /// <summary></summary
        UInt32 LowOrder { get; };

        /// <summary></summary
        UInt32 HighOrder { get; };
    }
}
